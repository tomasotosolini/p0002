###########################################################################
#    Copyright (C) 2007 by Tomaso Tosolini, Stefano Salvador                                      
#    <tomaso.tosolini@cbm.fvg.it>                                                             
#
# Copyright: See COPYING file that comes with this distribution
#
###########################################################################


require("rubygems")
gem "activesupport"

require("st/html/ui_views")

class St::Html::UiViews::Factory

	def self.get(type, *options)
		opt = St::Html::Support::Util.extract_variable_options(options)
        view_folder = opt.delete(:view_folder)

        if view_folder

            begin
                require( File.dirname(__FILE__) + "/types/#{view_folder}/#{type}_view" )
                klass = "#{type}_view".camelize
                return eval( klass ).new(opt)
            rescue Exception => exc
                require( File.dirname(__FILE__) + "/types/st_string_view" )
                klass = "st_string_view".camelize
                v = eval( klass ).new( {:prefix => "(WARNING: this is the fallback view. Original exception: #{exc}) "} )
                return v
            end
            
        else

            begin
                require( File.dirname(__FILE__) + "/types/st_#{type}_view" )
                klass = "st_#{type}_view".camelize
                return eval( klass ).new(opt)
            rescue Exception => exc
                require( File.dirname(__FILE__) + "/types/st_string_view" )
                klass = "st_string_view".camelize
                v = eval( klass ).new( {:prefix => "(WARNING: this is the fallback view. Original exception: #{exc}) "} )
                return v
            end

        end
	end

end

